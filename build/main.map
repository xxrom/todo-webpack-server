{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///external \"apollo-server\"","webpack:///external \"axios\"","webpack:///external \"dotenv\""],"names":["env","config","typeDefs","gql","books","title","author","PORT","process","resolvers","Query","hello","todo","axios","get","then","res","data","catch","err","console","error","server","ApolloServer","listen","url","log"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEAA,6CAAG,CAACC,MAAJ;AACA,MAAMC,QAAQ,GAAGC,iDAAI;;;;;;;;;;;;;;;;;;;;;;CAArB;AAuBA,MAAMC,KAAK,GAAG,CACZ;AACEC,OAAK,EAAE,yCADT;AAEEC,QAAM,EAAE;AAFV,CADY,EAKZ;AACED,OAAK,EAAE,eADT;AAEEC,QAAM,EAAE;AAFV,CALY,CAAd;AAUA,MAAMC,IAAI,GAAGC,OAAO,CAACR,GAAR,CAAYO,IAAZ,IAAoB,IAAjC;AACA,MAAME,SAAS,GAAG;AAChBC,OAAK,EAAE;AACLN,SAAK,EAAE,MAAMA,KADR;AAELO,SAAK,EAAE,MAAM,OAFR;AAGLC,QAAI,EAAE,MACJC,4CAAK,CACFC,GADH,CACO,4BADP,EAEGC,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAFrB,EAGGC,KAHH,CAGUC,GAAD,IAAS;AACdC,aAAO,CAACC,KAAR,CAAcF,GAAd;AACA,aAAO,OAAP;AACD,KANH;AAJG;AADS,CAAlB;AAcA,MAAMG,MAAM,GAAG,IAAIC,0DAAJ,CAAiB;AAAErB,UAAF;AAAYO;AAAZ,CAAjB,CAAf;AACAa,MAAM,CAACE,MAAP,CAAcjB,IAAd,EAAoBQ,IAApB,CAAyB,CAAC;AAAEU;AAAF,CAAD,KAAa;AACpCL,SAAO,CAACM,GAAR,CAAa,uBAAsBD,GAAI,EAAvC;AACD,CAFD,E,CAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;AC9FA,0C;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,mC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// import express from 'express';\n// import expressGraphQL from 'express-graphql';\n// import { buildSchema } from 'graphql';\n\nimport { ApolloServer, gql } from 'apollo-server';\n\nimport env from 'dotenv';\nimport axios from 'axios';\n\nenv.config();\nconst typeDefs = gql`\n  # Comments in GraphQL are defined with the hash (#) symbol.\n\n  # This \"Book\" type can be used in other type declarations.\n  type Book {\n    title: String\n    author: String\n  }\n\n  type TodoItem {\n    name: String\n  }\n\n  # The \"Query\" type is the root of all GraphQL queries.\n  # (A \"Mutation\" type will be covered later on.)\n  type Query {\n    books: [Book]\n\n    hello: String\n\n    todo: [TodoItem]\n  }\n`;\nconst books = [\n  {\n    title: 'Harry Potter and the Chamber of Secrets',\n    author: 'J.K. Rowling',\n  },\n  {\n    title: 'Jurassic Park',\n    author: 'Michael Crichton',\n  },\n];\nconst PORT = process.env.PORT || 4000;\nconst resolvers = {\n  Query: {\n    books: () => books,\n    hello: () => 'hello',\n    todo: () =>\n      axios\n        .get('http://localhost:3000/todo')\n        .then((res) => res.data)\n        .catch((err) => {\n          console.error(err);\n          return 'error';\n        }),\n  },\n};\nconst server = new ApolloServer({ typeDefs, resolvers });\nserver.listen(PORT).then(({ url }) => {\n  console.log(`ðŸš€  Server ready at ${url}`);\n});\n\n// Construct a schema, using GraphQL schema language\n// var schema = buildSchema(`\n//   type Query {\n//     hello: String\n//   }\n// `);\n\n// The root provides a resolver function for each API endpoint\n// const root = {\n//   hello: () => {\n//     return 'Hello';\n//   },\n// axios\n//   .get('http://localhost:3000/todo')\n//   .then((res) => res.data)\n//   .catch((err) => {\n//     console.error(err);\n//     return 'error';\n//   }),\n// };\n\n// const app = express();\n// app.use(\n//   '/graphql',\n//   expressGraphQL({\n//     schema: schema,\n//     rootValue: root,\n//     graphql: true,\n//   }),\n// );\n// app.listen(PORT);\n// console.log(`Running a GraphQL API server at localhost:${PORT}/graphql`);\n","module.exports = require(\"apollo-server\");","module.exports = require(\"axios\");","module.exports = require(\"dotenv\");"],"sourceRoot":""}