{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///external \"apollo-server-koa\"","webpack:///external \"axios\"","webpack:///external \"dotenv\"","webpack:///external \"koa\"","webpack:///external \"koa-morgan\""],"names":["env","config","PORT","process","typeDefs","gql","resolvers","Query","getTasks","axios","get","then","res","console","log","data","catch","err","error","Mutation","addTask","_root","args","_context","task","name","endAdding","post","deleteTask","id","ansWithErrorOrNot","delete","Object","keys","length","app","Koa","server","ApolloServer","applyMiddleware","use","morgan","listen"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { ApolloServer, gql } from 'apollo-server-koa';\nimport Koa from 'koa';\nimport morgan from 'koa-morgan';\nimport env from 'dotenv';\nimport axios from 'axios';\n\nenv.config();\nconst PORT = process.env.PORT || 4000;\n\nconst typeDefs = gql`\n  # Comments in GraphQL are defined with the hash (#) symbol.\n\n  type Query {\n    getTasks: [Task]\n  }\n\n  type Mutation {\n    addTask(task: TaskInput): TaskReturn!\n    deleteTask(id: ID): DeleteId\n  }\n\n  input TaskInput {\n    name: String\n  }\n\n  type Task {\n    id: String\n    name: String\n  }\n\n  type TaskReturn {\n    id: String\n    name: String\n  }\n  type DeleteId {\n    id: String\n  }\n`;\n\nconst resolvers = {\n  Query: {\n    getTasks: () =>\n      axios\n        .get('http://localhost:3000/tasks')\n        .then((res) => {\n          console.log('getTasks', res.data);\n          return res.data;\n        })\n        .catch((err) => {\n          console.error(err);\n          return err;\n        }),\n  },\n  Mutation: {\n    addTask: async (_root, args, _context) => {\n      console.log('addTask', args);\n      const {\n        task: { name },\n      } = args;\n\n      const endAdding = await axios\n        .post('http://localhost:3000/tasks', { name })\n        .then((res) => {\n          console.log(res.data);\n          return res.data;\n        })\n        .catch((err) => {\n          console.error('Error', err);\n          return err;\n        });\n      return endAdding;\n    },\n    deleteTask: async (_root, args, _context) => {\n      console.log('deleteTask', args);\n      const { id } = args;\n      if (!id) {\n        return;\n      }\n      const ansWithErrorOrNot = await axios\n        .delete(`http://localhost:3000/tasks/${555}`)\n        .then((res) => res.data)\n        .catch((err) => {\n          console.error(err);\n          return err;\n        });\n\n      return Object.keys(ansWithErrorOrNot).length === 0\n        ? args\n        : ansWithErrorOrNot;\n    },\n  },\n};\n\nconst app = new Koa();\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n});\n\nserver.applyMiddleware({\n  app,\n});\n\napp.use(morgan('tiny')).listen(PORT, () => {\n  console.log(`ðŸš€  Server ready at ${PORT}`);\n});\n","module.exports = require(\"apollo-server-koa\");","module.exports = require(\"axios\");","module.exports = require(\"dotenv\");","module.exports = require(\"koa\");","module.exports = require(\"koa-morgan\");"],"sourceRoot":""}